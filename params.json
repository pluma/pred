{"name":"pred","tagline":"JavaScript predicates","body":"# Synopsis\r\n\r\n**pred** is a library of JavaScript predicates (functions that test their input and return a boolean).\r\n\r\n[![Build Status](https://travis-ci.org/pluma/pred.png?branch=master)](https://travis-ci.org/pluma/pred) [![Coverage Status](https://coveralls.io/repos/pluma/pred/badge.png?branch=master)](https://coveralls.io/r/pluma/pred?branch=master) [![NPM version](https://badge.fury.io/js/pred.png)](http://badge.fury.io/js/pred) [![Dependencies](https://david-dm.org/pluma/pred.png)](https://david-dm.org/pluma/pred)\r\n\r\n# Install\r\n\r\n## With NPM\r\n\r\n```sh\r\nnpm install pred\r\n```\r\n\r\n## From source\r\n\r\n```sh\r\ngit clone https://github.com/pluma/pred.git\r\ncd pred\r\nnpm install\r\nmake test\r\n```\r\n\r\n# API\r\n\r\n## Complex predicates\r\n\r\n### all(predicates…):Function\r\n\r\nReturns a predicate that returns `true` if all of the predicates return `true` for the given input.\r\n\r\n### any(predicates…):Function\r\n\r\nReturns a predicate that returns `true` if any of the predicates return `true` for the given input.\r\n\r\n### equals(value):Function\r\n\r\nReturns a predicate that returns `true` if the input is identical to the given value (using `===` strict equal comparison).\r\n\r\n### deepEquals(value):Function\r\n\r\nReturns a predicate that returns `true` if the input is equivalent to the given value.\r\n\r\nExample:\r\n\r\n```javascript\r\nconsole.log(deepEquals({a: {b: ['c']}})({a: {b: ['c']}})); // true\r\n```\r\n\r\n### greaterThan(value:Number):Function\r\n\r\nReturns a predicate that returns `true` if the input is greater than (but not equal to) the given value.\r\n\r\n### lessThan(value:Number):Function\r\n\r\nReturns a predicate that returns `true` if the input is less than (but not equal to) the given value.\r\n\r\n### inRange(minValue:Number, maxValue:Number):Function\r\n\r\nReturns a predicate that returns `true` if the input is greater than (or equal to) the given minValue but less than (but not equal to) the given maxValue.\r\n\r\n### hasProperty(name:String):Function\r\n\r\nReturns a predicate that returns `true` if the input is an object that has a property with the given name.\r\n\r\n### hasProperties(names:Array):Function\r\n\r\nReturns a predicate that returns `true` if the input is an object that has a property with each of the given names.\r\n\r\n### hasProperties(properties:Object):Function\r\n\r\nReturns a predicate that returns `true` if the input is an object that has a property matching the given properties (name/value mapping).\r\n\r\n### matches(re:RegExp):Function\r\n\r\nReturns a predicate that returns `true` if the input value matches the given regular expression.\r\n\r\n### isInstance(Constructor:Function):Function\r\n\r\nReturns a predicate that returns `true` if the input value is an instance of the given constructor function.\r\n\r\n### isPrototypeOf(object):Function\r\n\r\nReturns a predicate that returns `true` if the input value is the prototype of the given object.\r\n\r\n### hasPrototype(proto):Function\r\n\r\nReturns a predicate that returns `true` if the given prototype is the prototype of the input value.\r\n\r\n## Simple predicates\r\n\r\n### falsey(value):Boolean\r\n\r\nReturns `true` if the input is falsey (i.e. evaluates as boolean `false`).\r\n\r\n### truthy(value):Boolean\r\n\r\nReturns `true` if the input is truthy (i.e. evaluates as boolean `true`).\r\n\r\n### isArray(value):Boolean\r\n\r\nReturns `true` if the given value is an `Array`.\r\n\r\n### isArrayLike(value):Boolean\r\n\r\nReturns `true` if the given value is an `Array` or an object with a numeric `length` property.\r\n\r\n### isBoolean(value):Boolean\r\n\r\nReturns `true` if the given value is a `Boolean`.\r\n\r\n### isEmpty(value):Boolean\r\n\r\nReturns `true` if the given value is falsey, an array-like object with `length` zero or an object with no properties.\r\n\r\n### isFunction(value):Boolean\r\n\r\nReturns `true` if the given value is a `Function`.\r\n\r\n### isNaN(value):Boolean\r\n\r\nReturns `true` if the given value is `NaN`.\r\n\r\n### isNull(value):Boolean\r\n\r\nReturns `true` if the given value is `null`.\r\n\r\n### isNumber(value):Boolean\r\n\r\nReturns `true` if the given value is a number other than `NaN`.\r\n\r\n### isObject(value):Boolean\r\n\r\nReturns `true` if the given value is an `object` other than `null`.\r\n\r\n### isPlainObject(value):Boolean\r\n\r\nReturns `true` if the given value is an instance of `Object`.\r\n\r\n### isString(value):Boolean\r\n\r\nReturns `true` if the given value is a `string`.\r\n\r\n### isUndefined(value):Boolean\r\n\r\nReturns `true` if the given value is `undefined`.\r\n\r\n# Unlicense\r\n\r\nThis is free and unencumbered public domain software. For more information, see http://unlicense.org/ or the accompanying [UNLICENSE](https://github.com/pluma/pred/blob/master/UNLICENSE) file.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}